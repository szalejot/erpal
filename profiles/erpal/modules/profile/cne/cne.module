<?php

/**
 * Implements hook_form_alter
	* Adds an instance option for making node fields editable by comment editable
	*/
function cne_form_field_ui_field_edit_form_alter(&$form, $form_state, $form_id) { 
	$form['instance']['comment_enabled'] = array(
    '#type' => 'checkbox',
    '#title' => t('Editable by comments'),
    '#description' => t('If checked, commenters will be able to edit the node when commenting.'),
    '#default_value' => isset($form['#instance']['comment_enabledfnode_save']) ? $form['#instance']['comment_enabled'] : FALSE,
    '#weight' => $form['instance']['label']['#weight'] + 1,
  );	
}

/**
 * Implements hook_form_alter
	* If user has commenting permissions, load the fields from the node and insert them into this form. Then unset any that are not "editable by comment"
	*/
function cne_form_comment_form_alter(&$form, &$form_state) {
  $node = $form['#node'];

	//Check to see if it's a new comment (CID should be null), that user has 'post comments' permission, that commenting is open.
  if (user_access('post comments') && 
						$node->comment == COMMENT_NODE_OPEN && 
						(variable_get('comment_form_location_' . $node->type, COMMENT_FORM_BELOW) == COMMENT_FORM_BELOW)) { 	
		
		//Attach the node's fields
    $new_form = array(); //if we attach all elements immideately, weights will get lost! So we keep the old form elements with old weights
		
		field_attach_form('node', $node, $new_form, $form_state, $node->language);
		
		//Get the weight of the author field
		$weight = isset($form['author']['#weight']) ? $form['author']['#weight']-1 : 0;

    $bundle = $node->type;
		//Loop through the field instances
		foreach (field_info_instances('node',$bundle) as $fieldname => $field_instance){
        //check if the filed is attached to the comment node, if this is the case, keept it there.
        $is_comment_field = false;
        foreach (field_info_instances('comment','comment_node_'.$node->type) as $comment_fieldname => $comment_field_instance){
          if ($comment_fieldname == $fieldname)
            $is_comment_field = true;
        }
        
        if ($is_comment_field)
          continue;
        
        //this field is not allready attached to comment field, so add it!
        $form[$fieldname] = $new_form[$fieldname];
        
        //Check if the field is editable by comment
				if(!isset($field_instance['comment_enabled']) || $field_instance['comment_enabled'] == 0){
            unset($form[$fieldname]);
				}else{
          //place the field above the comment					
          $weight--;
					$form[$fieldname]['#weight'] = $weight;
				}
		}	 
		
		//Add the submit and validate handlers
		array_push($form['#submit'],"cne_form_submit");
		array_push($form['#validate'],"cne_form_validate");
	}
}

/**
 * Validates added fields 
	*/
function cne_form_validate($form, &$form_state) { 
  $form_state_node = _cne_prepare_form_state($form, $form_state);
	field_attach_form_validate('node', $form['#node'], $form, $form_state_node);
}

/**
 * Submiuts and saves added fields 
	*/
function  cne_form_submit(&$form, &$form_state) {
  $form_state_node = _cne_prepare_form_state($form, $form_state);
  $cid = $form_state['values']['cid'];
	field_attach_submit('node', $form['#node'], $form, $form_state_node);
  $node = $form['#node'];
  $node->nodechanges_cid = $cid; //integrate with nodechanges module to update this comment!

  $node_options = variable_get('node_options_' . $node->type, false);
  //check if node should create a revision
  if (is_array($node_options) && in_array('revision', $node_options)) {
    $node->revision = true;
  }
  
  if(node_save($node)){
    // save node in form for other submits
    $form['#node'] = $node;
    drupal_set_message($form['#node']->title . " updated via comment");
  }
}

/**
 * Prepare form_state array. Node can content the same field as in comment.
 * If this field is not "comment_enabled" we shouldn't update it in the node.
 * @param array $form
 * @param array $form_state
 * @return array $form_state
 */
function _cne_prepare_form_state($form, $form_state) {
  if(isset($form['#node'])){
    $node = $form['#node'];
    $bundle = $node->type;
    // loop node fields
    foreach (field_info_instances('node', $bundle) as $fieldname => $field_instance) {
      // unset field in form state it it is not "comment_enabled"
      if (!isset($field_instance['comment_enabled']) || $field_instance['comment_enabled'] == 0) {
        if (isset($form_state['values'][$fieldname])) {
          unset($form_state['values'][$fieldname]);
        }
      }
    }
  }
  
  drupal_alter('cne_form', $form, $form_state);
   
  return $form_state;
}